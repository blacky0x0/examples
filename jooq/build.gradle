buildscript {
    ext { springBootVersion = '1.3.2.RELEASE' }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jooq:jooq-codegen:3.7.2")
        classpath("mysql:mysql-connector-java:5.1.38")
        classpath("org.postgresql:postgresql:9.4-1206-jdbc42")
    }
}

defaultTasks 'clean', 'generate'

apply {
    plugin 'idea'
    plugin 'spring-boot'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.jooq:jooq:3.7.2")
    compile("org.jooq:jooq-meta:3.7.2")
    compile("org.jooq:jooq-codegen:3.7.2")
    compile("org.projectlombok:lombok:1.16.6")
    compile("javax.validation:validation-api:1.1.0.Final")
    runtime("mysql:mysql-connector-java:5.1.38")
    runtime("org.postgresql:postgresql:9.4-1206-jdbc42")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


idea {
    module { downloadJavadoc = true }
}

task generate(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.example.JooqGenerator'
}

task copyEntities(type: Copy) {
    from 'src/generated'
    into 'src/main/java/'
}

task cleanTempDir(type: Delete) {
    delete fileTree(dir: 'src/generated')
}
